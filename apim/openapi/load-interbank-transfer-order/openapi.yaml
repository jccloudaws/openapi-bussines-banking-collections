openapi: 3.0.2
info:
  title: Api Channel Business Banking Load Interbank Transfer Order V1
  description: API Business for manage Load Interbank Transfer Order
  version: 1.0.0
servers:
  - description: Server in devops in business banking layer
    url: http://localhost:8080/channel/business-banking/v1/load-interbank-transfer-orders
tags:
  - name: "Account"
    description: "Account Controller"
  - name: "Load Interbank Transfer Order"
    description: "Load Interbank Transfer Order Controller"
  - name: "Beneficiary"
    description: "Beneficiary Controller"
  - name: "Financial Entity"
    description: "Financial Entities Controller"


security:
  - ApiKeyAuth: []

paths:
  /accounts:
    get:
      tags:
        - Account
      summary: Retrieve an account List
      description: >+
        ### Details:
        
        Retrieve an account List for interbanking transfer services, the data in contract shows some fields, but in cache save the next data about the account 
        account-uuid -> detail {companyContractProductUuid =12345678-eb18-432b-a9ac-0aa5e80ebe9a, account_id (productUuid/de la cuenta),
        type,  alias + nro account + product_uuid(uuid servicio/padre), currency_type)}

      operationId: getAccountByFilter
      parameters:
        - in: header
          name: Authorization
          description: token jwt send Front
          required: true
          schema:
            type: string
            example: ZDk5b0FscGdHdVBLR0Y1eG5pRDlqQzgwbzlMWHIyUTpzNUJMTDAwTW1Cck1wRmNj
      responses:
        200:
          description: Accounts retrieved
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/UxGetAccountByFilterResponse"
        400:
          description: The request information it's not correct.
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: "#/components/schemas/Error"
        401:
          description: You're not authorized to perform this operation.
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: "#/components/schemas/Error"
        403:
          description: You don't have the right permissions to execute this operation.
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: "#/components/schemas/Error"
        500:
          description: An error has occurred.
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: "#/components/schemas/Error"
        502:
          description: The service is not available.
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: "#/components/schemas/Error"

  /beneficiaries:
    get:
      tags:
        - Beneficiary
      summary: Retrieve a beneficiary List
      description: >+
        ### Details:
        
        Retrieve a beneficiary List for Interbanking transfer order services

      operationId: getBeneficiaryByFilter
      parameters:
        - in: header
          name: Authorization
          description: token jwt send Front
          required: true
          schema:
            type: string
            example: ZDk5b0FscGdHdVBLR0Y1eG5pRDlqQzgwbzlMWHIyUTpzNUJMTDAwTW1Cck1wRmNj
        - in: query
          name: fullName
          schema:
            type: string
          required: true
          description: search full name
          example: "Nombre Apellido"

      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UxGetBeneficiaryByFilterResponse'

        400:
          description: The request information it's not correct.
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: "#/components/schemas/Error"
        401:
          description: You're not authorized to perform this operation.
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: "#/components/schemas/Error"
        403:
          description: You don't have the right permissions to execute this operation.
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: "#/components/schemas/Error"
        404:
          description: Not Found
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: "#/components/schemas/Error"
        500:
          description: Internal error
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: "#/components/schemas/Error"
        502:
          description: Service not available
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: "#/components/schemas/Error"

  /financial-entities:
    get:
      tags:
        - Financial Entity
      summary: Retrieve a financial entitys List
      description: >+
        ### Details:
        
        Retrieve a financial entitys List for select a entitye

      operationId: getFinancialEntity
      parameters:
        - in: header
          name: Authorization
          description: token jwt send Front
          required: true
          schema:
            type: string
            example: ZDk5b0FscGdHdVBLR0Y1eG5pRDlqQzgwbzlMWHIyUTpzNUJMTDAwTW1Cck1wRmNj
        - in: query
          name: fullName
          schema:
            type: string
          required: true
          description: search full name
          example: "Nombre Apellido"

      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UxGetFinancialEntityResponse'

        400:
          description: The request information it's not correct.
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: "#/components/schemas/Error"
        401:
          description: You're not authorized to perform this operation.
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: "#/components/schemas/Error"
        403:
          description: You don't have the right permissions to execute this operation.
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: "#/components/schemas/Error"
        404:
          description: Not Found
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: "#/components/schemas/Error"
        500:
          description: Internal error
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: "#/components/schemas/Error"
        502:
          description: Service not available
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: "#/components/schemas/Error"

  /:
    post:
      tags:
        - Load Interbank Transfer Order
      summary: Create an interbank transfer Order
      description: >+
        ### Details:

        Create a Interbanking Transfer and its items. Some data is in cache 
        referenced by field interbankingTransferId in the body request.

      operationId: postInterbankTransferOrder
      parameters:
        - in: header
          name: Authorization
          description: token jwt send Front
          required: true
          schema:
            type: string
            example: ZDk5b0FscGdHdVBLR0Y1eG5pRDlqQzgwbzlMWHIyUTpzNUJMTDAwTW1Cck1wRmNj
      requestBody:
        description: Request to post the Interbanking transfer Order
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UxPostInterbankTransferOrderRequest'
      responses:
        201:
          description: Created
        400:
          description: The request information it's not correct.
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: "#/components/schemas/Error"
        401:
          description: You're not authorized to perform this operation.
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: "#/components/schemas/Error"
        403:
          description: You don't have the right permissions to execute this operation.
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: "#/components/schemas/Error"
        404:
          description: Not Found
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: "#/components/schemas/Error"
        500:
          description: Internal error
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: "#/components/schemas/Error"
        502:
          description: Service not available
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: "#/components/schemas/Error"
components:
  schemas:
    UxPostInterbankTransferOrderRequest:
      type: object
      additionalProperties: false
      required:
        - approvalDeadline
      properties:
        loadType:
          $ref: "#/components/schemas/LoadType"
        approvalDeadline:
          type: string
          description: approval date
          example: "2022-03-18"
        sourceProduct:
          $ref: "#/components/schemas/SourceProduct"
        interbanktransferOrderItem:
          $ref: "#/components/schemas/InterbanktransferOrderItem"
    SourceProduct:
      type: object
      properties:
        productId:
          type: string
          example: "232343333-abc-98181"
          description: account id reference stored in cache
    InterbanktransferOrderItem:
      type: object
      additionalProperties: false
      required:
        - description
      properties:
        description:
          type: string
          example: "Entrega material de factura 293837744343"
          description: Description payment
          nullable: false
        amount:
          type: number
          format: float
          example: 100.0
          nullable: false
        currency:
          $ref: "#/components/schemas/Currency"
        beneficiary:
          $ref: "#/components/schemas/Beneficiary"
        destinationProduct:
          $ref: "#/components/schemas/DestinationProduct"
    Balance:
      type: object
      properties:
        availableBalance:
          type: number
          format: double
          description: Balance disponible de la cuenta.
          example: 500.00
        countableBalance:
          type: number
          format: double
          description: Balance contable de la cuenta.
          example: 500.00

    DestinationProduct:
      type: object
      properties:
        productNumber:
          type: string
          example: "232343333"
          description: account number for payment

        type:
          $ref: "#/components/schemas/TypeProduct"
        financialEntity:
          $ref: "#/components/schemas/FinancialEntity"

    FinancialEntity:
      type: object
      properties:
        financialEntityId:
          type: string
          example: "123482-abc1781-8101"
          description: "uuid in cache"
          nullable: false
        fullName:
          type: string
          example: "Banco Pichincha"
          description: "id for entity"
          x-mapping:

    TypeProduct:
      type: object
      description: Kind of Product.
      properties:
        code:
          type: string
          example: "CTA.CTE PERSONAL"
    Beneficiary:
      type: object
      properties:
        beneficiaryId:
          type: string
          example: "12222"
          description: "Id the beneficiary."
          nullable: false
        documentType:
          type: string
          example: "RUC"
          description: Beneficiary Document type.
          nullable: false
          x-mapping: ""
        documentNumber:
          type: string
          example: "1231233450"
          description: Beneficiary ocument number.
          nullable: false
          x-mapping: ""
        fullname:
          type: string
          example: "Jesus Alberto"
          description: beneficiary fullName.
          nullable: false
          x-mapping: ""
        email:
          type: string
          example: "order@domain.com"
          description: Email beneficiary.
          nullable: false
          x-mapping: ""
        saveInformation:
          type: boolean
          example: "True/false"
          description: Data Beneficiary .
          nullable: false

    LoadType:
      type: object
      properties:
        code:
          type: string
          description: Manual
          example: Manual

    UxGetFinancialEntityResponse:
      type: array
      items:
        $ref: '#/components/schemas/FinancialEntityList'
    FinancialEntityList:
      title: FinancialEntityList
      type: object
      properties:
        financialEntityId:
          type: string
          example: "1234"
          description: "Id for entity"
          nullable: false
        fullName:
          type: string
          example: "Banco Pichincha"
          description: "Full name the beneficiary."
          nullable: false
        hasAgreement:
          type: string
          example: "Y | N"
          description: "If the entity has an agreement"
          nullable: false
    UxGetBeneficiaryByFilterResponse:
      type: array
      items:
        $ref: '#/components/schemas/BeneficiariesList'
    BeneficiariesList:
      title: BeneficiariesList
      type: object
      required:
        - fullName
        - documentType
        - documentNumber
        - email
      properties:
        beneficiaryId:
          type: string
          example: "12222"
          description: "Id the beneficiary."
          nullable: false
        documentType:
          type: string
          example: "documentType"
          description: "Type document the beneficiary."
          nullable: false
          x-mapping: "beneficiary.document_type"
        documentNumber:
          type: string
          example: "documentNumber"
          description: "Number document the beneficiary."
          nullable: false
          x-mapping: "beneficiary.document_number"
        fullName:
          type: string
          example: "Jhon Doe"
          description: "Full name the beneficiary."
          nullable: false
          x-mapping: "beneficiary.full_name"
        email:
          type: string
          example: "example@nttdata.com"
          description: "Email the beneficiary."
          nullable: false
          x-mapping: "beneficiary.email"
        product:
          $ref: "#/components/schemas/ProductAccount"
    ProductAccount :
      title: Product account information
      type: object
      properties:
        productNumber:
          type: string
          example: "AC1233546"
          description: account Number - puede estar en formato normal o formato IBAN
          nullable: false
          x-mapping: "product_beneficiary.productNumber"
        type:
          $ref: "#/components/schemas/ProductAccountType"
        financialEntity:
          $ref: "#/components/schemas/FinancialEntity"
    ProductAccountType:
      type: object
      description: ProductType
      properties:
        code:
          type: string
          description: product type code
          example: CTE
          nullable: false
          x-mapping: "product_beneficiary.productCode"
        description:
          type: string
          description: product Type description
          example: "CTA.CTE PERSONAL"
          nullable: false
          x-mapping: "product_beneficiary.productDescription"
    Currency:
      type: object
      properties:
        code:
          type: string
          description: Code for currency
          example: "USD"
    Status:
      type: object
      properties:
        code:
          type: string
          description: Code for status
          example: "APR"
        description:
          type: string
          description: Name status
          example: "Pendiente"
    UxGetAccountByFilterResponse:
      $ref: "#/components/schemas/Accounts"
    Accounts:
      type: object
      properties:
        account:
          $ref: "#/components/schemas/Account"
    Account:
      type: object
      properties:
        accountId:
          type: string
          description: account identification | acccount number
          example: a1d69827-09ac-4323-b861-314ea971084d
        accountNumber:
          type: string
          description: company contract id for service account| company_contract_product_uuid in database.
          example: 2100080794
        type:
          $ref: "#/components/schemas/AccountType"
        currency:
          $ref: "#/components/schemas/Currency"
        balanceInformation:
          $ref: "#/components/schemas/Balance"
        status:
          $ref: "#/components/schemas/Status"
        alias:
          type: string
          example: 'Cuenta Machala'
    AccountType:
      type: object
      properties:
        description:
          type: string
          description: description type account
          example: CORRIENTE
    Error:
      type: object
      properties:
        title:
          maximum: 50
          type: string
          description: Mensaje de error técnico.
        detail:
          maximum: 50
          type: string
          description: Mensaje a presentar al cliente.
        instance:
          maximum: 50
          type: string
          description: Código de catálogo de errores.
        type:
          maximum: 100
          type: string
          description: Dirección de la fuente solicitada por el proxy
        resource:
          maximum: 100
          type: string
          description: Recurso del servicio en el que se produjo el error.
        component:
          maximum: 100
          type: string
          description: Componente del servicio en el que sucedió el error.
        backend:
          maximum: 100
          type: string
          description: Código de error interno.
  securitySchemes:
    ApiKeyAuth:
      type: apiKey
      in: header
      name: x-api-key