openapi: 3.0.0
info:
  title: API Channel - Back Office - Approval Servicing Order V1
  description: |
    Channel API For Customer Management. <br>
    <br>
    <b>• Business Area</b> `Sales and service`
    <br>
    <b>• Business Domain</b> `Customer Management`
    <br>
    <b>• Service Domain</b> `Customer Products and Services`
  contact:
    name: Carlos Quiroz
    email: cquirozv-ext@pichincha.pe
  version: 1.0.0
servers:
  - url: http://localhost:8080/channel/back-office/v1/servicing-order
    description: Development
tags:
  - name: Servicing Order
    description: Servicing Order Controller
security:
  - ApiKeyAuth: []
paths:
  /list:
    get:
      tags:
        - Servicing Order
      summary: Retrieves list of records pending approval.
      security:
        - ApiKeyAuth: []
      description: "### Details:\n   Retrieve list of activations pending approval by filter\n### Valid use of parameters:\n| Expected result | Path Parameter | Query Parameter |\n|--------------------|--------------- |-----------------|\n|Retrieve activations by filter customerUuid  | - |  customerUuid  \n|Retrieve activations by filter status | - |  status   |\n|Retrieve activations by filter fullName| - |  fullName  |\n|Index to start returning the elements| - |  offset |\n|Number of records to return| - |  limit|\n|Returns the orders that were executed (approved or rejected) | - |  moreData=processedOrders |\n### The combination described above are the only possible combinations of parameters, other combinations will return error.          \n"
      operationId: GetServicingOrderListByFilter
      parameters:
        - in: header
          name: authorization
          description: token jwt
          required: true
          schema:
            type: string
        - name: app-name
          in: header
          description: Application Name
          required: true
          style: simple
          explode: false
          schema:
            type: string
            example: businessBanking
        - name: caller-name
          in: header
          description: Api name who request
          required: true
          style: simple
          explode: false
          schema:
            type: string
            example: bbe-msa-bs-guided-experience
        - name: process-code
          in: header
          description: Identifies the process or functionality
          required: true
          schema:
            type: string
            example: BJACAR01
        - name: request-date
          in: header
          description: Request Date | RFC 3339 Format
          required: true
          style: simple
          explode: false
          schema:
            type: string
          example: 2019-10-12 07:20:50.52Z
        - name: request-id
          in: header
          description: Request Identifier
          required: true
          style: simple
          explode: false
          schema:
            type: string
        - name: x-device
          in: header
          description: Identifier of the device.
          required: true
          style: simple
          explode: false
          schema:
            type: string
            example: 9939aadd00ee32
        - name: x-device-ip
          in: header
          description: IP address of origin of the request.
          required: true
          style: simple
          explode: false
          schema:
            type: string
            example: 200.10.89.34
        - name: x-language
          in: header
          description: ISO – 639-1  – Language Code - 2 digit code.
          required: true
          style: simple
          explode: false
          schema:
            maxLength: 5
            type: string
        - name: customerUuid
          in: query
          description: Pseudo identifier to retrieve information from cache.
          example: 3fa85f64-5717-4562-b3fc-2c963f66afa6
          required: false
          schema:
            type: string
        - name: status
          in: query
          description: Activation status
          required: true
          style: form
          explode: true
          schema:
            type: string
            example: PENDING
        - name: fullName
          in: query
          description: Company name
          required: false
          style: form
          explode: true
          schema:
            type: string
            example: TEST COMPANY SA
        - name: offset
          in: query
          description: index to start returning the elements
          required: false
          style: form
          explode: true
          schema:
            minimum: 0
            type: integer
          example: 10
        - name: limit
          in: query
          description: Number of records to return
          required: false
          style: form
          explode: true
          schema:
            minimum: 1
            type: integer
          example: 5
        - name: moreData
          in: query
          description: Returns the orders that were executed (approved or rejected).
          required: false
          style: form
          explode: true
          schema:
            type: string
            example: "processedOrders"
      responses:
        "200":
          description: |-
            <b>`Successful search.`</b>
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/GetServicingOrderListByFilterResponse'
              examples:
                GetUserProfilesResponseExample:
                  $ref: '#/components/examples/GetServicingOrderListByFilterResponseExample'
        "400":
          description: |-
            <b>`Bad Request`</b><br><br>
            The request could not be understood by the server due to malformed syntax. The client SHOULD NOT repeat the request without modifications.
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/ErrorBadRequest'
        "401":
          description: |-
            <b>`Unauthorized`</b><br><br>
            The request requires user authentication.
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/Error'
        "403":
          description: |-
            <b>`Forbidden`</b><br><br>
            The server understood the request, but is refusing to fulfill it. Authorization will not help and the request SHOULD NOT be repeated.
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/Error'
        "404":
          description: |-
            <b>`Not Found`</b><br><br>
            The server has not found anything matching the Request-URI.
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/Error'
        "409":
          description: |-
            <b>`Conflict`</b><br><br>
            The request could not be completed due to a conflict with the current state of the resource.
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/Error'
        "429":
          description: |-
            <b>`Too Many Requests`</b><br><br>
            Indicates that the user has sent too many requests in a given amount of time ("rate limiting").
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/Error'
        "500":
          description: |-
            <b>`Internal Server Error`</b><br><br>
            The server encountered an unexpected condition which prevented it from fulfilling the request.
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/Error'
        "504":
          description: |-
            <b>`Gateway Timeout`</b><br><br>
            The server, while acting as a gateway or proxy, did not receive a timely response from the upstream server.
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/Error'
  /:
    get:
      tags:
        - Servicing Order
      summary: Recover a servicing order by order.
      description: "### Details:\n   Recover a servicing order by order \n### Valid use of parameters:\n| Expected result | Path Parameter | Query Parameter |\n|--------------------|--------------- |-----------------|\n|Retrieve servicing order by filter trayOrderId | - |  trayOrderId   |\n### The combination described above are the only possible combinations of parameters, other combinations will return error.          \n"
      operationId: GetServicingOrderByFilter
      parameters:
        - in: header
          name: authorization
          description: token jwt
          required: true
          schema:
            type: string
        - name: app-name
          in: header
          description: Application Name - BackOffice | BusinessBanking | MobileToken
          required: true
          schema:
            type: string
            example: BackOffice
        - name: caller-name
          in: header
          description: Api name who request
          required: true
          schema:
            type: string
            example: bbe-msa-bs-guided-experience
        - name: process-code
          in: header
          description: Identifies the process or functionality
          required: false
          schema:
            type: string
            example: BJACAR01
        - name: request-date
          in: header
          description: Request Date | RFC 3339 Format
          required: true
          schema:
            $ref: '#/components/schemas/request-date'
          example: 2019-04-29 07:20:50.52Z
        - name: request-id
          in: header
          description: Request Identifier
          required: true
          schema:
            type: string
            example: id of request
        - name: x-session
          in: header
          description: Indicates the active session in which the user is transacting.
          required: false
          style: simple
          explode: false
          schema:
            type: string
            example: a9fd8deb-2aad-4d88-a7e3-d153c9e44b66
        - name: x-device
          in: header
          description: Identifier of the device.
          required: true
          style: simple
          explode: false
          schema:
            type: string
            example: 9939aadd00ee32
        - name: x-device-ip
          in: header
          description: IP address of origin of the request.
          required: true
          style: simple
          explode: false
          schema:
            type: string
            example: 200.10.89.34
        - name: x-language
          in: header
          description: ISO – 639-1  – Language Code - 2 digit code.
          required: true
          style: simple
          explode: false
          schema:
            maxLength: 5
            type: string
        - name: trayOrderUuid
          in: query
          description: Identifier to retrieve information from cache.
          required: true
          style: form
          explode: true
          schema:
            type: string
            example: 123456
      responses:
        200:
          description: You're not authorized to perform this operation.
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: "#/components/schemas/GetServicingOrderByFilterResponse"
        401:
          description: You're not authorized to perform this operation.
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: "#/components/schemas/Error"
        403:
          description: You don't have the right permissions to execute this operation.
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: "#/components/schemas/Error"
        500:
          description: An error has occurred.
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: "#/components/schemas/Error"
        502:
          description: The service is not available.
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: "#/components/schemas/Error"
    post:
      tags:
        - Servicing Order
      summary: update and delete service order.
      description: "### Details:\n   Update and delete the registration of the activation service order by identification.\n"
      operationId: PostServicingOrder
      parameters:
        - in: header
          name: authorization
          description: token jwt
          required: true
          schema:
            type: string
        - name: app-name
          in: header
          description: Application Name - BackOffice | BusinessBanking | MobileToken
          required: true
          schema:
            type: string
            example: BackOffice
        - name: caller-name
          in: header
          description: Api name who request
          required: true
          schema:
            type: string
            example: bbe-msa-bs-guided-experience
        - name: process-code
          in: header
          description: Identifies the process or functionality
          required: false
          schema:
            type: string
            example: BJACAR01
        - name: request-date
          in: header
          description: Request Date | RFC 3339 Format
          required: true
          schema:
            $ref: '#/components/schemas/request-date'
          example: 2019-04-29 07:20:50.52Z
        - name: request-id
          in: header
          description: Request Identifier
          required: true
          schema:
            type: string
            example: id of request
        - name: x-session
          in: header
          description: Indicates the active session in which the user is transacting.
          required: false
          style: simple
          explode: false
          schema:
            type: string
            example: a9fd8deb-2aad-4d88-a7e3-d153c9e44b66
        - name: x-device
          in: header
          description: Identifier of the device.
          required: true
          style: simple
          explode: false
          schema:
            type: string
            example: 9939aadd00ee32
        - name: x-device-ip
          in: header
          description: IP address of origin of the request.
          required: true
          style: simple
          explode: false
          schema:
            type: string
            example: 200.10.89.34
        - name: x-language
          in: header
          description: ISO – 639-1  – Language Code - 2 digit code.
          required: true
          style: simple
          explode: false
          schema:
            maxLength: 5
            type: string
      requestBody:
        description: Request to update or delete servicing order
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PostServicingOrderRequest'
        required: true
      responses:
        200:
          description: Servicing order updated or deleted.
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: "#/components/schemas/PostServicingOrderResponse"
        401:
          description: You're not authorized to perform this operation.
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: "#/components/schemas/Error"
        403:
          description: You don't have the right permissions to execute this operation.
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: "#/components/schemas/Error"
        500:
          description: An error has occurred.
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: "#/components/schemas/Error"
        502:
          description: The service is not available.
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: "#/components/schemas/Error"
components:
  schemas:
    GetServicingOrderListByFilterResponse:
      type: object
      properties:
        servicingOrders:
          type: array
          items:
            $ref: '#/components/schemas/GetServicingOrderList'
        pagination:
          $ref: '#/components/schemas/Pagination'
    GetServicingOrderList:
      type: object
      properties:
        trayOrderId:
          type: string
          description: Number of the creation order.
          example: "14621"
          maxLength: 50
        company:
          $ref: '#/components/schemas/Company'
        status:
          $ref: '#/components/schemas/Status'
        history:
          type: array
          items:
            $ref: '#/components/schemas/GetHistory'
    GetServicingOrderByFilterResponse:
      type: object
      properties:
        servicingOrder:
          type: array
          items:
            $ref: '#/components/schemas/GetServicingOrder'
    GetServicingOrder:
      type: object
      properties:
        trayOrderId:
          type: string
          description: number servicing Order
          example: "14621"
        customerAffiliationId:
          type: string
          description: customer affiliation id
          example: "963b7033-a47b-41d7-84e5-0df6aae68f10"
        entityTag:
          type: string
          description: entity Tag
          example: 14AUHYA-127201-QQ
        company:
          $ref: '#/components/schemas/Company'
        status:
          $ref: '#/components/schemas/Status'
        accountId:
          type: string
          description: account identification Mask | acccount number
          example: "abcd1234-a47b-41d7-a1b2-0df6aae68f10"
        numberApprovers:
          type: integer
          description: number approvers
          example: "1"
        packageProduct:
          type: array
          items:
            $ref: '#/components/schemas/PackageProduct'
        history:
          type: array
          items:
            $ref: '#/components/schemas/GetHistory'
    PackageProduct:
      type: object
      properties:
        packageId:
          type: string
          description: package Id
          example: "01906096-eb18-432b-a9ac-0aa5e80ebe9a"
        name:
          type: string
          description: name
          example: "Paquete avanzado"
        isEditable :
          type : boolean
          description : Whether the package is editable or not
          example: true
        products:
          type: array
          items:
            $ref: '#/components/schemas/GetProductSave'
    GetProductSave:
      title: GetProductSave
      type: object
      properties:
        productId:
          type: string
          description: Product Id.
          nullable: false
          example: A0AA046A-9884-46A4-9262-BD284F785DDB
        customerProductId:
          type: string
          description: Id Customer Product.
          nullable: false
          example: 01906096-eb18-432b-a9ac-0aa5e80ebe9a
        name:
          type: string
          description : The name of the product
          example: TRCTAPR
        description:
          type: string
          description: Descriptions product
          nullable: false
          example: Transferencias a Cuentas Propias
        isSelected :
          type : boolean
          description : Whether the product is selected or not
          example: false
        isSelectedUser :
          type : boolean
          description : Whether the product is selected or not for the customer
          example: false
        price:
          type: number
          description: price.
          format: double
          example: 500
        currency:
          $ref: '#/components/schemas/Currency'
        parameters:
          type: array
          items:
            $ref: '#/components/schemas/GetParameters'
        approvalLevels:
          type: array
          items:
            $ref: '#/components/schemas/GetApprovalLevels'
        productsAccounts:
          type: array
          items:
            $ref: '#/components/schemas/GetProductSonSave'
    GetProductSonSave:
      title: GetProduct
      type: object
      properties:
        productId:
          type: string
          description: Product Id child.
          nullable: false
          example: A0AA046A-9884-46A4-9262-BD284F785DDB
        customerProductId:
          type: string
          description: Id Customer Product child.
          nullable: false
          example: 01906096-eb18-432b-a9ac-0aa5e80ebe9a
        description:
          type: string
          description: description
          nullable: false
          example: Cuentas
        coreProductId:
          type: string
          description: core Product Id.
          nullable: false
          example: "123456"
        approvalLevels:
          type: array
          items:
            $ref: '#/components/schemas/GetApprovalLevelsSonSave'
    GetApprovalLevelsSonSave:
      title: GetProduct
      type: object
      properties:
        categories:
          type: array
          items:
            $ref: "#/components/schemas/CategorySave"
        limitsAmount:
          type: array
          items:
            $ref: "#/components/schemas/LimitAmount"
    CategorySave:
      title: Category
      type: object
      properties:
        categoryId:
          type: string
          description: category Id.
          example: "01906096-eb18-432b-a9ac-0aa5e80ebe9a"
        code:
          type: string
          example: "001"
          description: category code.
        name:
          type: string
          example: "Categoria A"
          description: category name.
    Status:
      title: Status
      type: object
      properties:
        code:
          type: string
          description: status code
          example: "PENDING"
          maxLength: 50
    PostServicingOrderResponse:
      title: PostServicingOrderResponse
      type: object
      properties:
        message:
          type: string
          description: returns delete or update successful
          example: "success deleted"
    PostServicingOrderRequest:
      title: PostServicingOrderRequest
      type: object
      properties:
        trayOrders:
          type: array
          items:
            $ref: '#/components/schemas/TrayOrderIdArray'
        customerUuid:
          type: string
          description: Pseudo identifier to retrieve information from cache.
          example: 3fa85f64-5717-4562-b3fc-2c963f66afa6
        instructingUser:
          type: string
          description: approver user.
          example: "jramos"
        action:
          type: boolean
          description: true to update and false to delete
          example: true
    TrayOrderIdArray:
      title: TrayOrderIdArray
      type: object
      properties:
        trayOrderId:
          type: string
          description: number servicing Order
          example: "14621"
    GetHistory:
      title: GetHistory
      type: object
      properties:
        date:
          type: string
          description: date history
          example: "2022-11-23T14:18:47.478+00:00"
          maxLength: 100
        instructingUser:
          type: string
          description: instructing user history.
          example: "jramos"
          maxLength: 100
        action:
          type: string
          description: action history.
          example: "TO_CREATING"
          maxLength: 50
        nextStatus:
          type: string
          description: next Status history.
          example: "PENDING_APPROVAL"
          maxLength: 50
        channel:
          type: string
          description: channel history.
          example: "Back Office"
          maxLength: 50
    Currency:
      type: object
      properties:
        code:
          type: string
          description: currency code | ISO-4217
          example: USD
        description:
          type: string
          description: currency description | ISO-4217
          example: Dolares Americanos
    GetApprovalLevels:
      title: GetApprovalLevels
      type: object
      properties:
        categories:
          type: array
          items:
            $ref: "#/components/schemas/CategoryChildren"
        limitsAmount:
          type: array
          items:
            $ref: "#/components/schemas/LimitAmount"
    LimitAmount:
      title: LimitAmount
      type: object
      properties:
        minAmount:
          type: string
          description: minimum amount
          example: "0"
        maxAmount:
          type: string
          description: maximum amount
          example: "10"
        currency:
          $ref: "#/components/schemas/Currency"
        categories:
          type: array
          items:
            $ref: "#/components/schemas/CategoryId"
    CategoryId:
      title: CategoryId
      type: object
      properties:
        categoryId:
          type: string
          example: "01906096-eb18-432b-a9ac-0aa5e80ebe9a"
          description: category id
    CategoryChildren:
      title: CategoryChildren
      type: object
      properties:
        categoryId:
          type: string
          description: category Id.
          example: "01906096-eb18-432b-a9ac-0aa5e80ebe9a"
        code:
          type: string
          example: "001"
          description: category code.
        name:
          type: string
          example: "Categoria A"
          description: category name.
    GetParameters:
      title: GetParameters
      type: object
      properties:
        name:
          type: string
          description : The name of the parameter
          example: "TSPOOL"
        description:
          type: string
          description: Description parameter
          nullable: false
          example: Tasa Pool
        value:
          type: string
          description: value parameter
          example: "7.5"
        typeValue:
          type: string
          description: type Value parameter
          example: "Porcentaje"
        status:
          $ref: '#/components/schemas/Status'
    Company:
      title: Company
      type: object
      properties:
        name:
          type: string
          description : The name company
          example: "Test Company SAC"
          maxLength: 50
        documentNumber:
          type: string
          description : company identification number
          example: "20569076893"
          maxLength: 50
        documentType:
          type: string
          description : document type number
          example: "1"
          maxLength: 50
    Pagination:
      type: object
      properties:
        itemQuantity:
          type: integer
          description: total number of available records
          example: 40
          maxLength: 100
    ErrorBadRequest:
      type: object
      properties:
        title:
          maxLength: 50
          type: string
          description: Technical error message.
          example: Missing mandatory fields.
        detail:
          maxLength: 50
          type: string
          description: Message to display to the client.
          example: The input fields are not correct
        errors:
          type: array
          items:
            $ref: '#/components/schemas/ErrorList'
        instance:
          maxLength: 50
          type: string
          description: Error catalog code.
          example: "022"
        type:
          maxLength: 100
          type: string
          description: Address where the error occurs.
          example: /v1/name/pathSuffix
    ErrorList:
      properties:
        message:
          type: string
          description: Message.
          maxLength: 50
          example: Bad Request
        businessMessage:
          type: string
          description: Business error message.
          maxLength: 50
          example: The xyz field is mandatory
    request-date:
      type: string
    Error:
      type: object
      properties:
        errorCode:
          maxLength: 6
          pattern: "^[a-zA-Z]+$\\d+$"
          type: string
          description: Error code.
        developerMessage:
          maxLength: 256
          pattern: "^[a-zA-Z\\s]*$"
          type: string
          description: Developer message.
        userMessage:
          maxLength: 256
          pattern: "^[a-zA-Z\\s]*$"
          type: string
          description: User message.
        moreInfo:
          maxLength: 256
          pattern: "^[a-zA-Z\\s]*$"
          type: string
          description: More info.
      additionalProperties: false
  securitySchemes:
    ApiKeyAuth:
      type: apiKey
      in: header
      name: x-api-key
  examples:
    GetServicingOrderListByFilterResponseExample:
      value:
        servicingOrders:
          - trayOrderId: "14621"
            company:
              name: "Test Company SAC"
              documentNumber: "20569076893"
              documentType: "1"
            status:
              code: "PENDING"
            history:
              - date: "2022-11-23T14:18:47.478+00:00"
                instructingUser: "jramos"
                action: "TO_CREATING"
                nextStatus: "PENDING_APPROVAL"
                channel: "Back Office"
        pagination:
          itemQuantity: 40